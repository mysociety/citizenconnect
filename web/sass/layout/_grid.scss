/*
==========================================
	Grid.scss 
==========================================
	
	Desktop: 960px+
	
	a grid for screens large enough to show it.
	
	12 Columns of 5em/80px (with 0.625em/10px padding included, equivilant to a 1.25em/20px gutter).
	Can be broken into 1,2,3,4,6,12 columns.
	
	16 Columns of 5em/80px (with 0.625em/10px padding included, equivilant to a 1.25em/20px gutter).
	Can be broken into 1,2,3,4,6,12 columns.
	
	24 Columns of 5em/80px (with 0.625em/10px padding included, equivilant to a 1.25em/20px gutter).
	Can be broken into 1,2,3,4,6,12 columns.
	
	use: @include grid-1-of-3   or   @include grid-container
	
------------------------------------------

*/

.grid-full{
    width: 100%;
    clear:both;
    float:left;
}

.grid-container{
    margin: 0 auto;
    clear:both;
    width: 100%;
    max-width:100%;
    padding: ($grid-gutter/2) 0;
    
    @media( min-width: 60em ){
        width: $page-width-max + em;
    }
}

.grid{
    display:block;
    margin: 0;
    float:left;
    max-width:100%;
    padding: $grid-gutter/2;
}
.grid-no_gutter{
    padding: 0;
}
.grid-gutter_v{
    padding: $grid-gutter/2 0;
}
.grid-gutter_h{
    padding: 0 $grid-gutter/2;
}

$i: $grid-column_count;
@while $i > 0 {
    .grid-#{$i}-of-#{$grid-column_count}{
        @extend .grid;
        width: ($page-width-max / $grid-column_count) * $i;
        
    }
    $i: $i - 1;
}








/**
 * Layout
 * Mixins to enable us to have a grid-like layout in the form that we want


// Make sure they also divide evenly between your chosen number of columns
$mobile-width: 25em !default;
$tablet-width: 45em !default;
$desktop-width: 60em !default;
// Column padding added to left and right of columns
$column-padding: 10px !default;


// Grid wrapper
@mixin grid() {
    margin: 0 auto;

    // Fix the max-width of the grid, to center it
    max-width: $mobile-width;

    @include respond-min($tablet-width) {
        max-width: $tablet-width;
    }

    @include respond-min($desktop-width) {
        max-width: $desktop-width;
    }
}

// Row in a grid
@mixin row {
    @extend .clearfix;
    width:100%;
}

@mixin column {
    // Columns float
    float: left;
    padding:0 $column-padding;
}

// Full-width columns
@mixin column-full {
    @include column();
    width: 100%;
}

// Half-width columns
@mixin column-half {
    @include column();
    width: 50%;
}

// Third-width columns
@mixin column-third {
    @include column();
    width: 33.33%;
}

// Two third-width columns
@mixin column-two-thirds {
    @include column();
    width: 66.66%;
}

// Quarter-width columns
@mixin column-quarter {
    @include column();
    width: 25%;
}
 */